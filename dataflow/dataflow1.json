{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "onlydatasetforall",
						"type": "DatasetReference"
					},
					"name": "student"
				},
				{
					"dataset": {
						"referenceName": "onlydatasetforall",
						"type": "DatasetReference"
					},
					"name": "department"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "onlydatasetforall",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "Datalake_LS",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "ModifyColumns1",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "ModifyColumns2",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "RemoveColumns1",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "join2"
				},
				{
					"name": "RemoveColumns2",
					"description": "Autogenerated by data preview actions"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as string,",
				"          Name as string,",
				"          DOB as string,",
				"          City as string,",
				"          State as string,",
				"          DeptId as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> student",
				"source(output(",
				"          Id as short,",
				"          Name as string,",
				"          EstYear as short,",
				"          HOD as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> department",
				"student derive(State = upper(State)) ~> ModifyColumns1",
				"ModifyColumns1 derive(DeptId = toShort(DeptId)) ~> ModifyColumns2",
				"ModifyColumns2 select(mapColumn(",
				"          Name,",
				"          State,",
				"          DeptId",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveColumns1",
				"RemoveColumns1, RemoveColumns2 join(DeptId == Id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"department select(mapColumn(",
				"          Id,",
				"          Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveColumns2",
				"join2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Id as string,",
				"          Name as string,",
				"          DOB as string,",
				"          City as string,",
				"          State as string,",
				"          DeptId as string",
				"     ),",
				"     partitionFileNames:['studept.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}